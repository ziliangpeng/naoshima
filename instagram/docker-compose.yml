version: '3'
services:
  ardb:
    # docker-compose up -d ardb
    image: lupino/ardb-server
    container_name: ardb-server
    ports:
      - "6379:16379"
    volumes:
      - /data/ig-ardb:/var/lib/ardb
  bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    # links is deprecated. we want to migrate to docker's user defined network.
    # we may also provision ardb inside here (bot own its data storage)
    links:
     - ardb:redis
  z-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "z"
    links:
     - ardb:redis
  airbnb-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "airbnb"
    links:
     - ardb:redis
  v-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "v"
    links:
     - ardb:redis
  mc-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "mc"
    links:
     - ardb:redis
  hix-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "hix"
    links:
     - ardb:redis
  newdone-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "newdone"
    links:
     - ardb:redis
  let-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "let"
    links:
     - ardb:redis
  eva-bot:
    build: .
    volumes:
      - /data/ig:/data/ig
    entrypoint:
      - "python"
      - "bot.py"
      - "-u"
      - "eva"
    links:
     - ardb:redis

#We need a way to achieve the following:
#- one click to bring up all of the several accounts on prod
#- one click to bring up another account on dev
#
#Existing tools:
#- runit service
#  - auto start after reboot
#  - can monitor status of each
#  - make sure always up, and exactly one instance
#- docker-compose run
#  - parameterizable of service definition
#  - need to manually run (cannot survive reboot)
#  - will have N instance if run N times
#- docker-compose up
#  - not parameteriable
#  - exactly one instance
#  - need manually run (cannot survive reboot)
#
#Solution:
#- runit + compose run
#  - one docker-compose service, several runit service
#- docker-compose up
#  - need to run individually for each account, unless prod and dev have different difinition file
